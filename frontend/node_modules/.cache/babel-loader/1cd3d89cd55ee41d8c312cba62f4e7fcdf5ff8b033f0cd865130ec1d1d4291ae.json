{"ast":null,"code":"var _jsxFileName = \"/home/tanmay/Projects/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SYMBOL_EMOJI = {\n  'A': '1',\n  'B': '⭐',\n  'C': '💎',\n  'D': '◇'\n};\nfunction App() {\n  _s();\n  const [balance, setBalance] = useState(457.00);\n  const [betPerLine, setBetPerLine] = useState(5.40);\n  const [lastWin, setLastWin] = useState(0.00);\n  const [grid, setGrid] = useState(Array(3).fill(Array(3).fill('◇')));\n  const [isSpinning, setIsSpinning] = useState(false);\n  useEffect(() => {\n    fetchBalance();\n  }, []);\n  const fetchBalance = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/balance');\n      const data = await response.json();\n      setBalance(data.balance);\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n  const handleSpin = async () => {\n    if (isSpinning) return;\n    setIsSpinning(true);\n    setLastWin(0);\n    try {\n      const response = await fetch('http://localhost:8080/api/spin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: Math.floor(betPerLine)\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Spin failed');\n      }\n      const data = await response.json();\n      setGrid(data.grid.map(row => row.map(symbol => SYMBOL_EMOJI[symbol])));\n      setBalance(data.balance);\n      setLastWin(data.winnings);\n      setIsSpinning(false);\n    } catch (error) {\n      setIsSpinning(false);\n      alert('Error occurred while spinning');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slot-machine\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-bar\",\n        children: \"GOLDEN VEGAS SLOTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot-grid\",\n        children: grid.map((row, i) => row.map((symbol, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `symbol ${isSpinning ? 'spinning' : ''}`,\n          children: symbol\n        }, `${i}-${j}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-label\",\n            children: \"LINES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bet-slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"BET PER LINE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", betPerLine.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"spin-button\",\n          onClick: handleSpin,\n          disabled: isSpinning,\n          children: \"SPIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"LAST WIN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", lastWin.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"BALANCE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", balance.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8X9FRNQAUghS3tVmyiPuDdBcwjw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SYMBOL_EMOJI","App","_s","balance","setBalance","betPerLine","setBetPerLine","lastWin","setLastWin","grid","setGrid","Array","fill","isSpinning","setIsSpinning","fetchBalance","response","fetch","data","json","error","console","handleSpin","method","headers","body","JSON","stringify","amount","Math","floor","ok","Error","map","row","symbol","winnings","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","i","j","toFixed","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/tanmay/Projects/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst SYMBOL_EMOJI = {\n  'A': '1',\n  'B': '⭐',\n  'C': '💎',\n  'D': '◇',\n};\n\nfunction App() {\n  const [balance, setBalance] = useState(457.00);\n  const [betPerLine, setBetPerLine] = useState(5.40);\n  const [lastWin, setLastWin] = useState(0.00);\n  const [grid, setGrid] = useState(Array(3).fill(Array(3).fill('◇')));\n  const [isSpinning, setIsSpinning] = useState(false);\n\n  useEffect(() => {\n    fetchBalance();\n  }, []);\n\n  const fetchBalance = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/balance');\n      const data = await response.json();\n      setBalance(data.balance);\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n\n  const handleSpin = async () => {\n    if (isSpinning) return;\n    setIsSpinning(true);\n    setLastWin(0);\n\n    try {\n      const response = await fetch('http://localhost:8080/api/spin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ amount: Math.floor(betPerLine) }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Spin failed');\n      }\n\n      const data = await response.json();\n      setGrid(data.grid.map(row => row.map(symbol => SYMBOL_EMOJI[symbol])));\n      setBalance(data.balance);\n      setLastWin(data.winnings);\n      setIsSpinning(false);\n\n    } catch (error) {\n      setIsSpinning(false);\n      alert('Error occurred while spinning');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"slot-machine\">\n        <div className=\"title-bar\">GOLDEN VEGAS SLOTS</div>\n        \n        <div className=\"slot-grid\">\n          {grid.map((row, i) => (\n            row.map((symbol, j) => (\n              <div \n                key={`${i}-${j}`} \n                className={`symbol ${isSpinning ? 'spinning' : ''}`}\n              >\n                {symbol}\n              </div>\n            ))\n          ))}\n        </div>\n\n        <div className=\"controls\">\n          <div className=\"bet-controls\">\n            <div className=\"control-label\">LINES</div>\n            <div className=\"bet-slider\">\n              <span>BET PER LINE</span>\n              <span>${betPerLine.toFixed(2)}</span>\n            </div>\n          </div>\n\n          <button \n            className=\"spin-button\"\n            onClick={handleSpin}\n            disabled={isSpinning}\n          >\n            SPIN\n          </button>\n\n          <div className=\"game-stats\">\n            <div className=\"stat\">\n              <span>LAST WIN</span>\n              <span>${lastWin.toFixed(2)}</span>\n            </div>\n            <div className=\"stat\">\n              <span>BALANCE</span>\n              <span>${balance.toFixed(2)}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,YAAY,GAAG;EACnB,GAAG,EAAE,GAAG;EACR,GAAG,EAAE,GAAG;EACR,GAAG,EAAE,IAAI;EACT,GAAG,EAAE;AACP,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EAC9C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAACe,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EACnE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACdkB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;MACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCf,UAAU,CAACc,IAAI,CAACf,OAAO,CAAC;IAC1B,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIT,UAAU,EAAE;IAChBC,aAAa,CAAC,IAAI,CAAC;IACnBN,UAAU,CAAC,CAAC,CAAC;IAEb,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DM,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAEC,IAAI,CAACC,KAAK,CAACzB,UAAU;QAAE,CAAC;MACzD,CAAC,CAAC;MAEF,IAAI,CAACW,QAAQ,CAACe,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,aAAa,CAAC;MAChC;MAEA,MAAMd,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCT,OAAO,CAACQ,IAAI,CAACT,IAAI,CAACwB,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACD,GAAG,CAACE,MAAM,IAAInC,YAAY,CAACmC,MAAM,CAAC,CAAC,CAAC,CAAC;MACtE/B,UAAU,CAACc,IAAI,CAACf,OAAO,CAAC;MACxBK,UAAU,CAACU,IAAI,CAACkB,QAAQ,CAAC;MACzBtB,aAAa,CAAC,KAAK,CAAC;IAEtB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdN,aAAa,CAAC,KAAK,CAAC;MACpBuB,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC;EAED,oBACEtC,OAAA;IAAKuC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBxC,OAAA;MAAKuC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BxC,OAAA;QAAKuC,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEnD5C,OAAA;QAAKuC,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvB9B,IAAI,CAACwB,GAAG,CAAC,CAACC,GAAG,EAAEU,CAAC,KACfV,GAAG,CAACD,GAAG,CAAC,CAACE,MAAM,EAAEU,CAAC,kBAChB9C,OAAA;UAEEuC,SAAS,EAAE,UAAUzB,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;UAAA0B,QAAA,EAEnDJ;QAAM,GAHF,GAAGS,CAAC,IAAIC,CAAC,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIb,CACN,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN5C,OAAA;QAAKuC,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBxC,OAAA;UAAKuC,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BxC,OAAA;YAAKuC,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1C5C,OAAA;YAAKuC,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBxC,OAAA;cAAAwC,QAAA,EAAM;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACzB5C,OAAA;cAAAwC,QAAA,GAAM,GAAC,EAAClC,UAAU,CAACyC,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN5C,OAAA;UACEuC,SAAS,EAAC,aAAa;UACvBS,OAAO,EAAEzB,UAAW;UACpB0B,QAAQ,EAAEnC,UAAW;UAAA0B,QAAA,EACtB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET5C,OAAA;UAAKuC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBxC,OAAA;YAAKuC,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACnBxC,OAAA;cAAAwC,QAAA,EAAM;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrB5C,OAAA;cAAAwC,QAAA,GAAM,GAAC,EAAChC,OAAO,CAACuC,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,eACN5C,OAAA;YAAKuC,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACnBxC,OAAA;cAAAwC,QAAA,EAAM;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACpB5C,OAAA;cAAAwC,QAAA,GAAM,GAAC,EAACpC,OAAO,CAAC2C,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzC,EAAA,CApGQD,GAAG;AAAAgD,EAAA,GAAHhD,GAAG;AAsGZ,eAAeA,GAAG;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}