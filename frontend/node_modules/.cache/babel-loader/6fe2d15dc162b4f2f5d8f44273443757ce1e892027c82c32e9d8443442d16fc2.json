{"ast":null,"code":"var _jsxFileName = \"/home/tanmay/Projects/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SYMBOL_EMOJI = {\n  'A': '🎰',\n  'B': '🍒',\n  'C': '🔔',\n  'D': '📊'\n};\nfunction App() {\n  _s();\n  const [balance, setBalance] = useState(0);\n  const [bet, setBet] = useState('');\n  const [grid, setGrid] = useState(Array(3).fill(Array(3).fill('?')));\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    fetchBalance();\n  }, []);\n  const fetchBalance = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/balance');\n      const data = await response.json();\n      setBalance(data.balance);\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n  const handleSpin = async () => {\n    if (isSpinning || !bet) return;\n    setIsSpinning(true);\n    setMessage('');\n\n    // Animate spinning\n    const animationInterval = setInterval(() => {\n      setGrid(prevGrid => prevGrid.map(row => row.map(() => {\n        const symbols = ['🎰', '🍒', '🔔', '📊'];\n        return symbols[Math.floor(Math.random() * symbols.length)];\n      })));\n    }, 100);\n    try {\n      const response = await fetch('http://localhost:8080/api/spin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: parseInt(bet)\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Spin failed');\n      }\n      const data = await response.json();\n\n      // Stop animation\n      setTimeout(() => {\n        clearInterval(animationInterval);\n        setGrid(data.grid.map(row => row.map(symbol => SYMBOL_EMOJI[symbol])));\n        setBalance(data.balance);\n        setMessage(data.message);\n        setIsSpinning(false);\n      }, 1000);\n    } catch (error) {\n      clearInterval(animationInterval);\n      setMessage('Error occurred while spinning');\n      setIsSpinning(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Slot Machine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balance\",\n      children: [\"Balance: $\", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slot-grid\",\n      children: grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((symbol, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: symbol\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: bet,\n        onChange: e => setBet(e.target.value),\n        placeholder: \"Enter bet amount\",\n        disabled: isSpinning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSpin,\n        disabled: isSpinning || !bet || parseInt(bet) > balance,\n        children: isSpinning ? 'Spinning...' : 'SPIN!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Symbol Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDFB0 Lucky 7 (10x)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDF52 Cherry (5x)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDD14 Bell (3x)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDCCA Bar (2x)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JJFcPtvytpYox9/jBw0+fYkQcfw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SYMBOL_EMOJI","App","_s","balance","setBalance","bet","setBet","grid","setGrid","Array","fill","isSpinning","setIsSpinning","message","setMessage","fetchBalance","response","fetch","data","json","error","console","handleSpin","animationInterval","setInterval","prevGrid","map","row","symbols","Math","floor","random","length","method","headers","body","JSON","stringify","amount","parseInt","ok","Error","setTimeout","clearInterval","symbol","className","children","fileName","_jsxFileName","lineNumber","columnNumber","i","j","type","value","onChange","e","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/tanmay/Projects/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst SYMBOL_EMOJI = {\n  'A': '🎰',\n  'B': '🍒',\n  'C': '🔔',\n  'D': '📊',\n};\n\nfunction App() {\n  const [balance, setBalance] = useState(0);\n  const [bet, setBet] = useState('');\n  const [grid, setGrid] = useState(Array(3).fill(Array(3).fill('?')));\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    fetchBalance();\n  }, []);\n\n  const fetchBalance = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/balance');\n      const data = await response.json();\n      setBalance(data.balance);\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n\n  const handleSpin = async () => {\n    if (isSpinning || !bet) return;\n\n    setIsSpinning(true);\n    setMessage('');\n\n    // Animate spinning\n    const animationInterval = setInterval(() => {\n      setGrid(prevGrid => \n        prevGrid.map(row => \n          row.map(() => {\n            const symbols = ['🎰', '🍒', '🔔', '📊'];\n            return symbols[Math.floor(Math.random() * symbols.length)];\n          })\n        )\n      );\n    }, 100);\n\n    try {\n      const response = await fetch('http://localhost:8080/api/spin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ amount: parseInt(bet) }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Spin failed');\n      }\n\n      const data = await response.json();\n      \n      // Stop animation\n      setTimeout(() => {\n        clearInterval(animationInterval);\n        setGrid(data.grid.map(row => row.map(symbol => SYMBOL_EMOJI[symbol])));\n        setBalance(data.balance);\n        setMessage(data.message);\n        setIsSpinning(false);\n      }, 1000);\n\n    } catch (error) {\n      clearInterval(animationInterval);\n      setMessage('Error occurred while spinning');\n      setIsSpinning(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Slot Machine</h1>\n      <div className=\"balance\">Balance: ${balance}</div>\n      \n      <div className=\"slot-grid\">\n        {grid.map((row, i) => (\n          <div key={i} className=\"row\">\n            {row.map((symbol, j) => (\n              <div key={j} className=\"cell\">\n                {symbol}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"controls\">\n        <input\n          type=\"number\"\n          value={bet}\n          onChange={(e) => setBet(e.target.value)}\n          placeholder=\"Enter bet amount\"\n          disabled={isSpinning}\n        />\n        <button \n          onClick={handleSpin} \n          disabled={isSpinning || !bet || parseInt(bet) > balance}\n        >\n          {isSpinning ? 'Spinning...' : 'SPIN!'}\n        </button>\n      </div>\n\n      {message && <div className=\"message\">{message}</div>}\n\n      <div className=\"legend\">\n        <h3>Symbol Values</h3>\n        <p>🎰 Lucky 7 (10x)</p>\n        <p>🍒 Cherry (5x)</p>\n        <p>🔔 Bell (3x)</p>\n        <p>📊 Bar (2x)</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}