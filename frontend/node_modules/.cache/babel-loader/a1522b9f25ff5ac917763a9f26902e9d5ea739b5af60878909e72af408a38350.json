{"ast":null,"code":"var _jsxFileName = \"/home/tanmay/Projects/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SYMBOL_EMOJI = {\n  'A': '7️⃣',\n  'B': '🎰',\n  'C': '⭐',\n  'D': '💎'\n};\nfunction App() {\n  _s();\n  const [balance, setBalance] = useState(0);\n  const [bet, setBet] = useState('');\n  const [grid, setGrid] = useState(Array(3).fill(Array(3).fill('❓')));\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [message, setMessage] = useState('');\n  const [winnings, setWinnings] = useState(0);\n  const [lastBet, setLastBet] = useState(0);\n  useEffect(() => {\n    fetchBalance();\n  }, []);\n  const fetchBalance = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/balance');\n      const data = await response.json();\n      setBalance(data.balance);\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n  const handleSpin = async () => {\n    if (isSpinning || !bet) return;\n    setIsSpinning(true);\n    setMessage('');\n    setLastBet(parseInt(bet));\n    setWinnings(0);\n\n    // Animate spinning\n    const animationInterval = setInterval(() => {\n      setGrid(prevGrid => prevGrid.map(row => row.map(() => {\n        const symbols = Object.values(SYMBOL_EMOJI);\n        return symbols[Math.floor(Math.random() * symbols.length)];\n      })));\n    }, 100);\n    try {\n      const response = await fetch('http://localhost:8080/api/spin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: parseInt(bet)\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Spin failed');\n      }\n      const data = await response.json();\n\n      // Stop animation\n      setTimeout(() => {\n        clearInterval(animationInterval);\n        setGrid(data.grid.map(row => row.map(symbol => SYMBOL_EMOJI[symbol])));\n        setBalance(data.balance);\n        setMessage(data.message);\n        setWinnings(data.winnings);\n        setIsSpinning(false);\n      }, 1000);\n    } catch (error) {\n      clearInterval(animationInterval);\n      setMessage('Error occurred while spinning');\n      setIsSpinning(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balance-display\",\n      children: [\"Balance: $\", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slot-machine\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bet-display\",\n        children: [\"Current Bet: $\", lastBet]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot-grid\",\n        children: grid.map((row, i) => row.map((symbol, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell ${isSpinning ? 'spinning' : ''}`,\n          children: symbol\n        }, `${i}-${j}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), winnings > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winning-display\",\n        children: [\"Won: $\", winnings]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"bet-input\",\n          value: bet,\n          onChange: e => setBet(e.target.value),\n          placeholder: \"Enter bet\",\n          disabled: isSpinning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"spin-button\",\n          onClick: handleSpin,\n          disabled: isSpinning || !bet || parseInt(bet) > balance,\n          children: isSpinning ? 'SPINNING...' : 'SPIN!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"symbol-values\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Symbol Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"7\\uFE0F\\u20E3 Lucky 7 (10x)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDFB0 Machine (5x)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2B50 Star (3x)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDC8E Diamond (2x)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"17f/xcTyx8LXRJFmO94u18TCTUY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SYMBOL_EMOJI","App","_s","balance","setBalance","bet","setBet","grid","setGrid","Array","fill","isSpinning","setIsSpinning","message","setMessage","winnings","setWinnings","lastBet","setLastBet","fetchBalance","response","fetch","data","json","error","console","handleSpin","parseInt","animationInterval","setInterval","prevGrid","map","row","symbols","Object","values","Math","floor","random","length","method","headers","body","JSON","stringify","amount","ok","Error","setTimeout","clearInterval","symbol","className","children","fileName","_jsxFileName","lineNumber","columnNumber","i","j","type","value","onChange","e","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/tanmay/Projects/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst SYMBOL_EMOJI = {\n  'A': '7️⃣',\n  'B': '🎰',\n  'C': '⭐',\n  'D': '💎',\n};\n\nfunction App() {\n  const [balance, setBalance] = useState(0);\n  const [bet, setBet] = useState('');\n  const [grid, setGrid] = useState(Array(3).fill(Array(3).fill('❓')));\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [message, setMessage] = useState('');\n  const [winnings, setWinnings] = useState(0);\n  const [lastBet, setLastBet] = useState(0);\n\n  useEffect(() => {\n    fetchBalance();\n  }, []);\n\n  const fetchBalance = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/balance');\n      const data = await response.json();\n      setBalance(data.balance);\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n\n  const handleSpin = async () => {\n    if (isSpinning || !bet) return;\n\n    setIsSpinning(true);\n    setMessage('');\n    setLastBet(parseInt(bet));\n    setWinnings(0);\n\n    // Animate spinning\n    const animationInterval = setInterval(() => {\n      setGrid(prevGrid => \n        prevGrid.map(row => \n          row.map(() => {\n            const symbols = Object.values(SYMBOL_EMOJI);\n            return symbols[Math.floor(Math.random() * symbols.length)];\n          })\n        )\n      );\n    }, 100);\n\n    try {\n      const response = await fetch('http://localhost:8080/api/spin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ amount: parseInt(bet) }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Spin failed');\n      }\n\n      const data = await response.json();\n      \n      // Stop animation\n      setTimeout(() => {\n        clearInterval(animationInterval);\n        setGrid(data.grid.map(row => row.map(symbol => SYMBOL_EMOJI[symbol])));\n        setBalance(data.balance);\n        setMessage(data.message);\n        setWinnings(data.winnings);\n        setIsSpinning(false);\n      }, 1000);\n\n    } catch (error) {\n      clearInterval(animationInterval);\n      setMessage('Error occurred while spinning');\n      setIsSpinning(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"balance-display\">Balance: ${balance}</div>\n      \n      <div className=\"slot-machine\">\n        <div className=\"bet-display\">Current Bet: ${lastBet}</div>\n        <div className=\"slot-grid\">\n          {grid.map((row, i) => (\n            row.map((symbol, j) => (\n              <div key={`${i}-${j}`} className={`cell ${isSpinning ? 'spinning' : ''}`}>\n                {symbol}\n              </div>\n            ))\n          ))}\n        </div>\n\n        {winnings > 0 && (\n          <div className=\"winning-display\">Won: ${winnings}</div>\n        )}\n\n        <div className=\"controls\">\n          <input\n            type=\"number\"\n            className=\"bet-input\"\n            value={bet}\n            onChange={(e) => setBet(e.target.value)}\n            placeholder=\"Enter bet\"\n            disabled={isSpinning}\n          />\n          <button \n            className=\"spin-button\"\n            onClick={handleSpin} \n            disabled={isSpinning || !bet || parseInt(bet) > balance}\n          >\n            {isSpinning ? 'SPINNING...' : 'SPIN!'}\n          </button>\n        </div>\n      </div>\n\n      {message && <div className=\"message\">{message}</div>}\n\n      <div className=\"symbol-values\">\n        <h3>Symbol Values</h3>\n        <p>7️⃣ Lucky 7 (10x)</p>\n        <p>🎰 Machine (5x)</p>\n        <p>⭐ Star (3x)</p>\n        <p>💎 Diamond (2x)</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}