{"ast":null,"code":"var _jsxFileName = \"/home/tanmay/Projects/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SYMBOLS = {\n  'A': {\n    emoji: '7️⃣',\n    name: 'Lucky Seven',\n    color: '#4CAF50',\n    multiplier: 10\n  },\n  'B': {\n    emoji: '⭐',\n    name: 'Star',\n    color: '#FFC107',\n    multiplier: 5\n  },\n  'C': {\n    emoji: '💎',\n    name: 'Diamond',\n    color: '#2196F3',\n    multiplier: 3\n  },\n  'D': {\n    emoji: '👑',\n    name: 'Crown',\n    color: '#9C27B0',\n    multiplier: 2\n  }\n};\nconst PAYLINES = [{\n  id: 1,\n  name: 'Top Row'\n}, {\n  id: 2,\n  name: 'Middle Row'\n}, {\n  id: 3,\n  name: 'Bottom Row'\n}, {\n  id: 4,\n  name: 'Diagonal ↘'\n}, {\n  id: 5,\n  name: 'Diagonal ↗'\n}];\nconst MULTIPLIERS = [{\n  value: 1,\n  label: '1x'\n}, {\n  value: 2,\n  label: '2x'\n}, {\n  value: 5,\n  label: '5x'\n}, {\n  value: 10,\n  label: '10x'\n}];\n\n// Add sound constants\nconst SOUNDS = {\n  spin: new Audio('/sounds/spin.mp3'),\n  win: new Audio('/sounds/win.mp3'),\n  click: new Audio('/sounds/click.mp3')\n};\n\n// Preload sounds\nObject.values(SOUNDS).forEach(sound => {\n  sound.load();\n  sound.volume = 0.5; // Set default volume\n});\nconst playSound = soundName => {\n  try {\n    const sound = SOUNDS[soundName];\n    if (sound) {\n      sound.currentTime = 0; // Reset sound to start\n      sound.play().catch(err => console.log('Sound play prevented:', err));\n    }\n  } catch (error) {\n    console.log('Sound error:', error);\n  }\n};\nfunction App() {\n  _s();\n  const [balance, setBalance] = useState(1000.00);\n  const [betPerLine, setBetPerLine] = useState(1.00);\n  const [activeLines, setActiveLines] = useState(3);\n  const [lastWin, setLastWin] = useState(0);\n  const [totalBet, setTotalBet] = useState(betPerLine * activeLines);\n  const [grid, setGrid] = useState(Array(3).fill(Array(3).fill('D')));\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [winningLines, setWinningLines] = useState([]);\n  const [autoPlay, setAutoPlay] = useState(false);\n  const [spinHistory, setSpinHistory] = useState([]);\n  const [showPaytable, setShowPaytable] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [autoPlayCount, setAutoPlayCount] = useState(0);\n  const [maxAutoPlays] = useState(50); // Maximum auto-plays allowed\n  const [multiplier, setMultiplier] = useState(1);\n  useEffect(() => {\n    const newTotalBet = Number((betPerLine * activeLines * multiplier).toFixed(2));\n    setTotalBet(newTotalBet);\n  }, [betPerLine, activeLines, multiplier]);\n  const handleBetChange = amount => {\n    const newBet = Math.max(0.20, Math.min(100, betPerLine + amount));\n    setBetPerLine(Number(newBet.toFixed(2)));\n  };\n  const handleAutoPlayToggle = () => {\n    if (autoPlay) {\n      // Stop autoplay\n      setAutoPlay(false);\n      setAutoPlayCount(0);\n    } else {\n      // Start autoplay\n      setAutoPlay(true);\n      setAutoPlayCount(0);\n      handleSpin();\n    }\n  };\n  const handleSpin = async () => {\n    if (isSpinning || totalBet > balance) {\n      setAutoPlay(false);\n      setAutoPlayCount(0);\n      return;\n    }\n    setIsSpinning(true);\n    setWinningLines([]);\n    setLastWin(0);\n    if (!isMuted) {\n      playSound('spin');\n    }\n\n    // Deduct bet\n    setBalance(prev => Number((prev - totalBet).toFixed(2)));\n\n    // Spinning animation\n    const spinDuration = 2000;\n    const spinInterval = setInterval(() => {\n      setGrid(prevGrid => prevGrid.map(row => row.map(() => {\n        const symbols = Object.keys(SYMBOLS);\n        return symbols[Math.floor(Math.random() * symbols.length)];\n      })));\n    }, 100);\n    try {\n      const response = await fetch('http://localhost:8080/api/spin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: totalBet\n        })\n      });\n      const data = await response.json();\n\n      // Stop animation and update state\n      setTimeout(() => {\n        clearInterval(spinInterval);\n        setGrid(data.grid);\n        setBalance(data.balance);\n        if (data.winnings > 0) {\n          setLastWin(data.winnings);\n          // Highlight winning lines animation\n          highlightWinningLines(data.grid);\n          if (data.winnings > 0 && !isMuted) {\n            playSound('win');\n          }\n        }\n\n        // Add to history\n        setSpinHistory(prev => [{\n          grid: data.grid,\n          win: data.winnings,\n          bet: totalBet,\n          timestamp: new Date()\n        }, ...prev].slice(0, 10));\n        setIsSpinning(false);\n        if (autoPlay && balance >= totalBet) {\n          if (autoPlayCount >= maxAutoPlays) {\n            setAutoPlay(false);\n            setAutoPlayCount(0);\n          } else {\n            setAutoPlayCount(prev => prev + 1);\n            setTimeout(handleSpin, 1000);\n          }\n        }\n      }, spinDuration);\n    } catch (error) {\n      setAutoPlay(false);\n      setAutoPlayCount(0);\n      clearInterval(spinInterval);\n      setIsSpinning(false);\n      console.error('Spin failed:', error);\n    }\n  };\n  const highlightWinningLines = grid => {\n    const winLines = [];\n\n    // Check rows\n    grid.forEach((row, i) => {\n      if (row.every(symbol => symbol === row[0])) {\n        winLines.push(i + 1);\n      }\n    });\n\n    // Check diagonals\n    if (grid[0][0] === grid[1][1] && grid[1][1] === grid[2][2]) {\n      winLines.push(4);\n    }\n    if (grid[0][2] === grid[1][1] && grid[1][1] === grid[2][0]) {\n      winLines.push(5);\n    }\n    setWinningLines(winLines);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slot-machine\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"machine-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"GOLDEN VEGAS SLOTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `sound-button ${isMuted ? 'muted' : ''}`,\n            onClick: () => setIsMuted(!isMuted),\n            children: isMuted ? '🔇' : '🔊'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"balance-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"BALANCE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"$\", balance.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paylines left\",\n          children: PAYLINES.slice(0, 3).map(line => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `payline ${activeLines >= line.id ? 'active' : ''} \n                           ${winningLines.includes(line.id) ? 'winning' : ''}`,\n            children: line.id\n          }, line.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slot-grid\",\n          children: grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: row.map((symbol, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `symbol ${isSpinning ? 'spinning' : ''} \n                              ${winningLines.includes(i + 1) ? 'winning' : ''}`,\n              style: {\n                '--symbol-color': SYMBOLS[symbol].color\n              },\n              children: SYMBOLS[symbol].emoji\n            }, `${i}-${j}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this))\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paylines right\",\n          children: PAYLINES.slice(3).map(line => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `payline ${activeLines >= line.id ? 'active' : ''}\n                           ${winningLines.includes(line.id) ? 'winning' : ''}`,\n            children: line.id\n          }, line.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lines-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"LINES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lines-buttons\",\n              children: [1, 3, 5].map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: activeLines === num ? 'active' : '',\n                onClick: () => setActiveLines(num),\n                children: num\n              }, num, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bet-amount\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"BET PER LINE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bet-adjuster\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleBetChange(-0.20),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", betPerLine.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleBetChange(0.20),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"multiplier-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"MULTIPLIER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"multiplier-buttons\",\n              children: MULTIPLIERS.map(({\n                value,\n                label\n              }) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `multiplier-button ${multiplier === value ? 'active' : ''}`,\n                onClick: () => setMultiplier(value),\n                disabled: isSpinning,\n                children: label\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"spin-button\",\n            onClick: handleSpin,\n            disabled: isSpinning || totalBet > balance,\n            children: isSpinning ? 'SPINNING...' : 'SPIN'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `autoplay-button ${autoPlay ? 'active' : ''}`,\n            onClick: handleAutoPlayToggle,\n            disabled: totalBet > balance,\n            children: autoPlay ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"STOP AUTO\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"autoplay-counter\",\n                children: autoPlayCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : 'AUTO PLAY'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-bet\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"TOTAL BET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", totalBet.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"last-win\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"LAST WIN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: lastWin > 0 ? 'winning' : '',\n              children: [\"$\", lastWin.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"paytable-button\",\n      onClick: () => setShowPaytable(!showPaytable),\n      children: \"PAYTABLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), showPaytable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paytable-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"PAYTABLE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this), Object.entries(SYMBOLS).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paytable-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol-preview\",\n          style: {\n            '--symbol-color': value.color\n          },\n          children: value.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [value.multiplier, \"x Multiplier\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 15\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spin-history\",\n      children: spinHistory.map((spin, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Bet: $\", spin.bet]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: spin.win > 0 ? 'winning' : '',\n          children: [\"Win: $\", spin.win]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NPTLl0hMdJy0hQZK2RHgxos7BcY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","SYMBOLS","emoji","name","color","multiplier","PAYLINES","id","MULTIPLIERS","value","label","SOUNDS","spin","Audio","win","click","Object","values","forEach","sound","load","volume","playSound","soundName","currentTime","play","catch","err","console","log","error","App","_s","balance","setBalance","betPerLine","setBetPerLine","activeLines","setActiveLines","lastWin","setLastWin","totalBet","setTotalBet","grid","setGrid","Array","fill","isSpinning","setIsSpinning","winningLines","setWinningLines","autoPlay","setAutoPlay","spinHistory","setSpinHistory","showPaytable","setShowPaytable","isMuted","setIsMuted","autoPlayCount","setAutoPlayCount","maxAutoPlays","setMultiplier","newTotalBet","Number","toFixed","handleBetChange","amount","newBet","Math","max","min","handleAutoPlayToggle","handleSpin","prev","spinDuration","spinInterval","setInterval","prevGrid","map","row","symbols","keys","floor","random","length","response","fetch","method","headers","body","JSON","stringify","data","json","setTimeout","clearInterval","winnings","highlightWinningLines","bet","timestamp","Date","slice","winLines","i","every","symbol","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","line","includes","j","style","num","disabled","entries","key","index","_c","$RefreshReg$"],"sources":["/home/tanmay/Projects/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst SYMBOLS = {\n  'A': { emoji: '7️⃣', name: 'Lucky Seven', color: '#4CAF50', multiplier: 10 },\n  'B': { emoji: '⭐', name: 'Star', color: '#FFC107', multiplier: 5 },\n  'C': { emoji: '💎', name: 'Diamond', color: '#2196F3', multiplier: 3 },\n  'D': { emoji: '👑', name: 'Crown', color: '#9C27B0', multiplier: 2 }\n};\n\nconst PAYLINES = [\n  { id: 1, name: 'Top Row' },\n  { id: 2, name: 'Middle Row' },\n  { id: 3, name: 'Bottom Row' },\n  { id: 4, name: 'Diagonal ↘' },\n  { id: 5, name: 'Diagonal ↗' }\n];\n\nconst MULTIPLIERS = [\n  { value: 1, label: '1x' },\n  { value: 2, label: '2x' },\n  { value: 5, label: '5x' },\n  { value: 10, label: '10x' }\n];\n\n// Add sound constants\nconst SOUNDS = {\n  spin: new Audio('/sounds/spin.mp3'),\n  win: new Audio('/sounds/win.mp3'),\n  click: new Audio('/sounds/click.mp3')\n};\n\n// Preload sounds\nObject.values(SOUNDS).forEach(sound => {\n  sound.load();\n  sound.volume = 0.5; // Set default volume\n});\n\nconst playSound = (soundName) => {\n  try {\n    const sound = SOUNDS[soundName];\n    if (sound) {\n      sound.currentTime = 0; // Reset sound to start\n      sound.play().catch(err => console.log('Sound play prevented:', err));\n    }\n  } catch (error) {\n    console.log('Sound error:', error);\n  }\n};\n\nfunction App() {\n  const [balance, setBalance] = useState(1000.00);\n  const [betPerLine, setBetPerLine] = useState(1.00);\n  const [activeLines, setActiveLines] = useState(3);\n  const [lastWin, setLastWin] = useState(0);\n  const [totalBet, setTotalBet] = useState(betPerLine * activeLines);\n  const [grid, setGrid] = useState(Array(3).fill(Array(3).fill('D')));\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [winningLines, setWinningLines] = useState([]);\n  const [autoPlay, setAutoPlay] = useState(false);\n  const [spinHistory, setSpinHistory] = useState([]);\n  const [showPaytable, setShowPaytable] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [autoPlayCount, setAutoPlayCount] = useState(0);\n  const [maxAutoPlays] = useState(50); // Maximum auto-plays allowed\n  const [multiplier, setMultiplier] = useState(1);\n\n  useEffect(() => {\n    const newTotalBet = Number((betPerLine * activeLines * multiplier).toFixed(2));\n    setTotalBet(newTotalBet);\n  }, [betPerLine, activeLines, multiplier]);\n\n  const handleBetChange = (amount) => {\n    const newBet = Math.max(0.20, Math.min(100, betPerLine + amount));\n    setBetPerLine(Number(newBet.toFixed(2)));\n  };\n\n  const handleAutoPlayToggle = () => {\n    if (autoPlay) {\n      // Stop autoplay\n      setAutoPlay(false);\n      setAutoPlayCount(0);\n    } else {\n      // Start autoplay\n      setAutoPlay(true);\n      setAutoPlayCount(0);\n      handleSpin();\n    }\n  };\n\n  const handleSpin = async () => {\n    if (isSpinning || totalBet > balance) {\n      setAutoPlay(false);\n      setAutoPlayCount(0);\n      return;\n    }\n    \n    setIsSpinning(true);\n    setWinningLines([]);\n    setLastWin(0);\n\n    if (!isMuted) {\n      playSound('spin');\n    }\n\n    // Deduct bet\n    setBalance(prev => Number((prev - totalBet).toFixed(2)));\n\n    // Spinning animation\n    const spinDuration = 2000;\n    const spinInterval = setInterval(() => {\n      setGrid(prevGrid => \n        prevGrid.map(row => \n          row.map(() => {\n            const symbols = Object.keys(SYMBOLS);\n            return symbols[Math.floor(Math.random() * symbols.length)];\n          })\n        )\n      );\n    }, 100);\n\n    try {\n      const response = await fetch('http://localhost:8080/api/spin', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ amount: totalBet })\n      });\n\n      const data = await response.json();\n\n      // Stop animation and update state\n      setTimeout(() => {\n        clearInterval(spinInterval);\n        setGrid(data.grid);\n        setBalance(data.balance);\n        \n        if (data.winnings > 0) {\n          setLastWin(data.winnings);\n          // Highlight winning lines animation\n          highlightWinningLines(data.grid);\n          if (data.winnings > 0 && !isMuted) {\n            playSound('win');\n          }\n        }\n        \n        // Add to history\n        setSpinHistory(prev => [{\n          grid: data.grid,\n          win: data.winnings,\n          bet: totalBet,\n          timestamp: new Date()\n        }, ...prev].slice(0, 10));\n\n        setIsSpinning(false);\n\n        if (autoPlay && balance >= totalBet) {\n          if (autoPlayCount >= maxAutoPlays) {\n            setAutoPlay(false);\n            setAutoPlayCount(0);\n          } else {\n            setAutoPlayCount(prev => prev + 1);\n            setTimeout(handleSpin, 1000);\n          }\n        }\n      }, spinDuration);\n\n    } catch (error) {\n      setAutoPlay(false);\n      setAutoPlayCount(0);\n      clearInterval(spinInterval);\n      setIsSpinning(false);\n      console.error('Spin failed:', error);\n    }\n  };\n\n  const highlightWinningLines = (grid) => {\n    const winLines = [];\n    \n    // Check rows\n    grid.forEach((row, i) => {\n      if (row.every(symbol => symbol === row[0])) {\n        winLines.push(i + 1);\n      }\n    });\n\n    // Check diagonals\n    if (grid[0][0] === grid[1][1] && grid[1][1] === grid[2][2]) {\n      winLines.push(4);\n    }\n    if (grid[0][2] === grid[1][1] && grid[1][1] === grid[2][0]) {\n      winLines.push(5);\n    }\n\n    setWinningLines(winLines);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"slot-machine\">\n        <div className=\"machine-header\">\n          <h1>GOLDEN VEGAS SLOTS</h1>\n          <div className=\"controls-top\">\n            <button \n              className={`sound-button ${isMuted ? 'muted' : ''}`}\n              onClick={() => setIsMuted(!isMuted)}\n            >\n              {isMuted ? '🔇' : '🔊'}\n            </button>\n            <div className=\"balance-display\">\n              <span>BALANCE</span>\n              <h2>${balance.toFixed(2)}</h2>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"game-container\">\n          <div className=\"paylines left\">\n            {PAYLINES.slice(0, 3).map(line => (\n              <div \n                key={line.id}\n                className={`payline ${activeLines >= line.id ? 'active' : ''} \n                           ${winningLines.includes(line.id) ? 'winning' : ''}`}\n              >\n                {line.id}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"slot-grid\">\n            {grid.map((row, i) => (\n              <div key={i} className=\"row\">\n                {row.map((symbol, j) => (\n                  <div \n                    key={`${i}-${j}`}\n                    className={`symbol ${isSpinning ? 'spinning' : ''} \n                              ${winningLines.includes(i + 1) ? 'winning' : ''}`}\n                    style={{ '--symbol-color': SYMBOLS[symbol].color }}\n                  >\n                    {SYMBOLS[symbol].emoji}\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"paylines right\">\n            {PAYLINES.slice(3).map(line => (\n              <div \n                key={line.id}\n                className={`payline ${activeLines >= line.id ? 'active' : ''}\n                           ${winningLines.includes(line.id) ? 'winning' : ''}`}\n              >\n                {line.id}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"controls-panel\">\n          <div className=\"bet-controls\">\n            <div className=\"lines-selector\">\n              <label>LINES</label>\n              <div className=\"lines-buttons\">\n                {[1, 3, 5].map(num => (\n                  <button \n                    key={num}\n                    className={activeLines === num ? 'active' : ''}\n                    onClick={() => setActiveLines(num)}\n                  >\n                    {num}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"bet-amount\">\n              <label>BET PER LINE</label>\n              <div className=\"bet-adjuster\">\n                <button onClick={() => handleBetChange(-0.20)}>-</button>\n                <span>${betPerLine.toFixed(2)}</span>\n                <button onClick={() => handleBetChange(0.20)}>+</button>\n              </div>\n            </div>\n\n            <div className=\"multiplier-selector\">\n              <label>MULTIPLIER</label>\n              <div className=\"multiplier-buttons\">\n                {MULTIPLIERS.map(({ value, label }) => (\n                  <button \n                    key={value}\n                    className={`multiplier-button ${multiplier === value ? 'active' : ''}`}\n                    onClick={() => setMultiplier(value)}\n                    disabled={isSpinning}\n                  >\n                    {label}\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"action-controls\">\n            <button \n              className=\"spin-button\"\n              onClick={handleSpin}\n              disabled={isSpinning || totalBet > balance}\n            >\n              {isSpinning ? 'SPINNING...' : 'SPIN'}\n            </button>\n            \n            <button \n              className={`autoplay-button ${autoPlay ? 'active' : ''}`}\n              onClick={handleAutoPlayToggle}\n              disabled={totalBet > balance}\n            >\n              {autoPlay ? (\n                <>\n                  STOP AUTO\n                  <div className=\"autoplay-counter\">{autoPlayCount}</div>\n                </>\n              ) : 'AUTO PLAY'}\n            </button>\n          </div>\n\n          <div className=\"game-stats\">\n            <div className=\"total-bet\">\n              <label>TOTAL BET</label>\n              <span>${totalBet.toFixed(2)}</span>\n            </div>\n            <div className=\"last-win\">\n              <label>LAST WIN</label>\n              <span className={lastWin > 0 ? 'winning' : ''}>\n                ${lastWin.toFixed(2)}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <button \n        className=\"paytable-button\"\n        onClick={() => setShowPaytable(!showPaytable)}\n      >\n        PAYTABLE\n      </button>\n\n      {showPaytable && (\n        <div className=\"paytable-modal\">\n          <h2>PAYTABLE</h2>\n          {Object.entries(SYMBOLS).map(([key, value]) => (\n            <div key={key} className=\"paytable-row\">\n              <div className=\"symbol-preview\" style={{ '--symbol-color': value.color }}>\n                {value.emoji}\n              </div>\n              <div className=\"symbol-info\">\n                <h3>{value.name}</h3>\n                <p>{value.multiplier}x Multiplier</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      <div className=\"spin-history\">\n        {spinHistory.map((spin, index) => (\n          <div key={index} className=\"history-item\">\n            <span>Bet: ${spin.bet}</span>\n            <span className={spin.win > 0 ? 'winning' : ''}>\n              Win: ${spin.win}\n            </span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}